name: Release To Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-with-docker:
    name: Build with Docker
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v4
      - uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64,linux/arm64
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Create .env file
        run: |
          echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" > .env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
          echo "BCRYPT_SALT=${{ secrets.BCRYPT_SALT }}" >> .env
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
          repository: alotfy2019/my-portofolio

    # #or
    # #registry: ghcr.io
    #       build_extra_args: '{"--build-arg": ["          SENDGRID_API_KEY= ${{ secrets.SENDGRID_API_KEY }},MONGO_URI= ${{ secrets.MONGO_URI }},BCRYPT_SALT= ${{ secrets.BCRYPT_SALT }} ]}'
